#include <Windows.h>
//#include "stdafx.h"
#include <stdlib.h>
#include "disasm.h"


#define COUNT_TABLE(table) (sizeof(table) / sizeof(table[0]))

const PSTR disasm::m_modrm32[][8]={
	{"[eax]", "[ecx]", "[edx]", "[ebx]", "[-][-]", "disp32", "[esi]", "[edi]"},
	{"[eax]+disp8", "[ecx]+disp8", "[edx]+disp8", "[ebx]+disp8", "[-][-]+disp8", "[esp]+disp8", "[esi]+disp8", "[edi]+disp8"},
	{"[eax]+disp32", "[ecx]+disp32", "[edx]+disp32", "[ebx]+disp32", "[-][-]+disp32", "[esp]+disp32", "[esi]+disp32", "[edi]+disp32"}
};

const PSTR disasm::m_reg[][8]={
	{"al", "cl", "dl", "bl", "ah", "ch", "dh", "bh"},
	{"ax", "cx", "dx", "bx", "sp", "bp", "si", "di"},
	{"eax", "ecx", "edx", "ebx", "esp", "ebp", "esi", "edi"},
	{"mm0", "mm1", "mm2", "mm3", "mm4", "mm5", "mm6", "mm7"},
	{"xmm0", "xmm1", "xmm2", "xmm3", "xmm4", "xmm5", "xmm6", "xmm7"},
	{"cr0", "cr1", "cr2", "cr3", "cr4", "cr5", "cr6", "cr7"},
	{"dr0", "dr1", "dr2", "dr3", "dr4", "dr5", "dr6", "dr7"}
};

const INSTRC disasm::m_instrc[] = {
	/*opcode, data, prefix1, prefix2, operands, operands_size, op_name, digit_id*/
	0x0, CODE_R, -1, -1, {{OP_RM8}, {OP_R8}}, 2, (const char *)"add", 0, 
	0x1, CODE_R, -1, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"add", 0,
	0x2, CODE_R, -1, -1, {{OP_R8}, {OP_RM8}}, 2, (const char *)"add", 0, 
	0x3, CODE_R, -1, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"add", 0, 
	0x4, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"add al, ", 0, 
	0x5, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"add eax, ", 0, 
	0x6, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"push es", 0, 
	0x7, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"pop es", 0, 
	0x8, CODE_R, -1, -1, {{OP_RM8}, {OP_R8}}, 2, (const char *)"or", 0, 
	0x9, CODE_R, -1, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"or", 0, 
	0xA, CODE_R, -1, -1, {{OP_R8}, {OP_RM8}}, 2, (const char *)"or", 0, 
	0xB, CODE_R, -1, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"or", 0, 
	0xC, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"or al, ", 0, 
	0xD, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"or eax, ",  0, 
	0xE, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"push cs", 0, 
	0xF, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
		0x0, CODE_DIGIT, 0xF, -1, {{OP_RM16}}, 1, (const char *)"sldt", 0,
		0x0, CODE_DIGIT, 0xF, -1, {{OP_RM16}}, 1, (const char *)"str", 1,
		0x0, CODE_DIGIT, 0xF, -1, {{OP_RM16}}, 1, (const char *)"lldt", 2, 
		0x0, CODE_DIGIT, 0xF, -1, {{OP_RM16}}, 1, (const char *)"ltr", 3, 
		0x0, CODE_DIGIT, 0xF, -1, {{OP_RM16}}, 1, (const char *)"verr", 4, 
		0x0, CODE_DIGIT, 0xF, -1, {{OP_RM16}}, 1, (const char *)"verw", 5, 
		0x1, CODE_DIGIT, 0xF, -1, {{OP_M}}, 1, (const char *)"sgdt", 0, 
		0x1, CODE_DIGIT, 0xF, -1, {{OP_M}}, 1, (const char *)"sidt", 1, 
		0x1, CODE_DIGIT, 0xF, -1, {{OP_MPAIR_1632}}, 1, (const char *)"lgdt", 2, 
		0x1, CODE_DIGIT, 0xF, -1, {{OP_MPAIR_1632}}, 1, (const char *)"lidt", 3, 
		0x1, CODE_DIGIT, 0xF, -1, {{OP_RM32}}, 1, (const char *)"smsw", 4, 
		0x1, CODE_DIGIT, 0xF, -1, {{OP_RM16}}, 1, (const char *)"lmsw", 6, 
		0x1, CODE_DIGIT, 0xF, -1, {{OP_M}}, 1, (const char *)"invlpg", 7, 
		0x2, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"lar", 0, 
		0x3, CODE_R, 0xF, -1, {{OP_R16}, {OP_RM16}}, 2, (const char *)"lsl",  0, 
		0x3, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"lsl",  0, 
		0x6, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"clts", 0, 
		0x8, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"invd", 0, 
		0x9, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"wbinvd", 0, 
		0xB, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"ud2", 0, 
		0x20, CODE_R, 0xF, -1, {{OP_R32}, {OP_CR}}, 2, (const char *)"mov", 0, 
		0x21, CODE_R, 0xF, -1, {{OP_R32}, {OP_DR}}, 2, (const char *)"mov", 0, 
		0x22, CODE_R, 0xF, -1, {{OP_CR}, {OP_R32}}, 2, (const char *)"mov", 0, 
		0x23, CODE_R, 0xF, -1, {{OP_DR}, {OP_R32}}, 2, (const char *)"mov", 0, 
		0x30, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"wrmsr", 0, 
		0x31, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"rdtsc", 0, 
		0x30, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"rdmsr", 0, 
		0x33, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"rdpmc", 0, 
		0x40, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovo",  0, 
		0x41, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovno",  0, 
		0x42, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovb",  0, 
		0x42, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovc",  0, 
		0x42, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovnae",  0, 
		0x43, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovae",  0, 
		0x43, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovnb",  0, 
		0x43, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovnc",  0, 
		0x44, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmove",  0, 
		0x44, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovz",  0, 
		0x45, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovne",  0, 
		0x45, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovnz",  0, 
		0x46, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovbe",  0, 
		0x46, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovna",  0, 
		0x47, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmova",  0, 
		0x47, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovnbe",  0, 
		0x48, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovs",  0, 
		0x49, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovns",  0, 
		0x4A, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovp",  0, 
		0x4A, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovpe",  0, 
		0x4B, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovnp",  0, 
		0x4B, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovpo",  0, 
		0x4C, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovl",  0, 
		0x4C, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovnge", 0, 
		0x4D, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovge",  0, 
		0x4D, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovnl",  0, 
		0x4E, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovle",  0, 
		0x4E, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovng",  0, 
		0x4F, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovg",  0, 
		0x4F, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmovnle",  0, 
		0x60, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"punpcklbw",  0, 
		0x61, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"punpcklbd",  0, 
		0x62, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"punpcklbq",  0, 
		0x63, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"packsswb",  0, 
		0x64, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"pcmpgtb",  0, 
		0x65, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"pcmpgtw",  0, 
		0x66, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"pcmpgtd",  0, 
		0x67, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"packuswb",  0, 
		0x68, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"punpckhbw",  0, 
		0x69, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"punpckhwd",  0, 
		0x6A, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"punpckhdq",  0, 
		0x6B, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"packssdw",  0, 
		0x6E, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_RM32}}, 2, (const char *)"movd",  0, 
		0x6F, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"movq", 0,  
		0x71, CODE_DIGIT, 0xF, -1, {{OP_MMXREG}, {OP_IMM8}}, 2, (const char *)"psrlw", 2, 
		0x71, CODE_DIGIT, 0xF, -1, {{OP_MMXREG}, {OP_IMM8}}, 2, (const char *)"psraw", 4, 
		0x71, CODE_DIGIT, 0xF, -1, {{OP_MMXREG}, {OP_IMM8}}, 2, (const char *)"psllw", 6, 
		0x72, CODE_DIGIT, 0xF, -1, {{OP_MMXREG}, {OP_IMM8}}, 2, (const char *)"psrld", 2, 
		0x72, CODE_DIGIT, 0xF, -1, {{OP_MMXREG}, {OP_IMM8}}, 2, (const char *)"psrad", 4, 
		0x72, CODE_DIGIT, 0xF, -1, {{OP_MMXREG}, {OP_IMM8}}, 2, (const char *)"pslld", 6, 
		0x73, CODE_DIGIT, 0xF, -1, {{OP_MMXREG}, {OP_IMM8}}, 2, (const char *)"psrlq", 2, 
		0x73, CODE_DIGIT, 0xF, -1, {{OP_MMXREG}, {OP_IMM8}}, 2, (const char *)"psllq", 6, 
		0x74, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"pcmpeqb", 0, 
		0x75, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"pcmpeqw", 0, 
		0x76, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"pcmpeqd", 0, 
		0x77, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"emms", 0, 
		0x7E, CODE_R, 0xF, -1, {{OP_RM32}, {OP_MMXREG}}, 2, (const char *)"movd", 0, 
		0x7F, CODE_R, 0xF, -1, {{OP_MMXRM64}, {OP_MMXREG}}, 2, (const char *)"movq", 0, 
		0x80, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"jo", 0, 
		0x81, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"jno", 0, 
		0x82, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"jb", 0, 
		0x83, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"jae", 0, 
		0x84, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"je", 0, 
		0x85, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"jne", 0, 
		0x86, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"jbe", 0, 
		0x87, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"ja", 0, 
		0x88, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"js", 0, 
		0x89, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"jns", 0, 
		0x8A, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"jpe", 0, 
		0x8B, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"jpo", 0, 
		0x8C, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"jl", 0, 
		0x8D, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"jge", 0, 
		0x8E, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"jle", 0, 
		0x8F, NULL, 0xF, -1, {{OP_REL32}}, 1, (const char *)"jg", 0, 
		0x90, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"seto", 0, 
		0x91, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"setno", 0, 
		0x92, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"setb", 0, 
		0x93, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"setae", 0, 
		0x94, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"sete", 0, 
		0x95, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"setne", 0, 
		0x96, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"setbe", 0, 
		0x97, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"seta", 0, 
		0x98, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"sets", 0, 
		0x99, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"setns", 0, 
		0x9A, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"setpe", 0, 
		0x9B, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"setpo", 0, 
		0x9C, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"setl", 0, 
		0x9D, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"setge", 0, 
		0x9E, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"setle", 0, 
		0x9F, CODE_R, 0xF, -1, {{OP_RM8}}, 1, (const char *)"setg", 0, 
		0xA0, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"push fs", 0, 
		0xA1, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"pop fs", 0, 
		0xA2, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"cpuid", 0, 
		0xA3, CODE_R, 0xF, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"bt", 0, 
		0xA4, CODE_R, 0xF, -1, {{OP_RM32}, {OP_R32}, {OP_IMM8}}, 3, (const char *)"shld", 0, 
		0xA5, CODE_R, 0xF, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"shld , ,cl", 0, 
		0xA8, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"push gs", 0, 
		0xA9, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"push gs", 0, 
		0xAA, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"rsm", 0, 
		0xAB, NULL, 0xF, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"bts", 0, 
		0xAC, CODE_R, 0xF, -1, {{OP_RM32}, {OP_R32}, {OP_IMM8}}, 3, (const char *)"shrd", 0, 
		0xAD, CODE_R, 0xF, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"shrd , ,cl", 0, 
		0xAF, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"imul", 0, 
		0xB0, CODE_R, 0xF, -1, {{OP_RM8}, {OP_R8}}, 2, (const char *)"cmpxchg", 0, 
		0xB1, CODE_R, 0xF, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"cmpxchg", 0, 
		0xB2, CODE_R, 0xF, -1, {{OP_R32}, {OP_MFAR_1632}}, 2, (const char *)"lss", 0, 
		0xB3, CODE_R, 0xF, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"btr", 0, 
		0xB4, CODE_R, 0xF, -1, {{OP_R32}, {OP_MFAR_1632}}, 2, (const char *)"lfs", 0, 
		0xB5, CODE_R, 0xF, -1, {{OP_R32}, {OP_MFAR_1632}}, 2, (const char *)"lgs", 0, 
		0xB6, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM8}}, 2, (const char *)"movzx", 0, 
		0xB7, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM16}}, 2, (const char *)"movzx", 0, 
		0xBA, CODE_DIGIT, 0xF, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"bt", 4, 
		0xBA, CODE_DIGIT, 0xF, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"bts", 5, 
		0xBA, CODE_DIGIT, 0xF, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"btr", 6, 
		0xBA, CODE_DIGIT, 0xF, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"btc", 7, 
		0xBB, CODE_R, 0xF, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"btc", 0, 
		0xBC, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"bsf", 0, 
		0xBD, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"bsr", 0, 
		0xBE, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM8}}, 2, (const char *)"movsx", 0, 
		0xBF, CODE_R, 0xF, -1, {{OP_R32}, {OP_RM16}}, 2, (const char *)"movsx", 0, 
		0xC0, CODE_R, 0xF, -1, {{OP_RM8}, {OP_R8}}, 2, (const char *)"xadd", 0, 
		0xC1, CODE_R, 0xF, -1, {{OP_RM16}, {OP_R16}}, 2, (const char *)"xadd", 0, 
		0xC1, CODE_R, 0xF, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"xadd", 0, 
		0xC7, CODE_DIGIT, 0xF, -1, {{OP_M64}}, 1, (const char *)"cmpxchg8b", 0, 
		//0xC8, CODE_PRD, 0xF, -1, {{OP_R32}}, 1, (const char *)"cmpxchg8b", 0, 
			0xC8, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"cmpxchg8b eax", 0, 
			0xC9, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"cmpxchg8b ecx", 0, 
			0xCA, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"cmpxchg8b edx", 0, 
			0xCB, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"cmpxchg8b ebx", 0, 
			0xCC, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"cmpxchg8b esp", 0, 
			0xCD, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"cmpxchg8b ebp", 0, 
			0xCE, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"cmpxchg8b esi", 0, 
			0xCF, NULL, 0xF, -1, {{OP_NULL}}, 0, (const char *)"cmpxchg8b edi", 0, 
		0xD1, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psrlw", 0, 
		0xD2, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psrld", 0, 
		0xD3, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psrlq", 0, 
		0xD5, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"pmullw", 0, 
		0xD8, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psubusb", 0, 
		0xD9, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psubusw", 0, 
		0xDB, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"pand", 0, 
		0xDC, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"paddusb", 0, 
		0xDD, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"paddusw", 0, 
		0xDF, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"pandn", 0, 
		0xE1, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psraw", 0, 
		0xE2, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psrad", 0, 
		0xE5, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"pmulhw", 0, 
		0xE8, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psubsb", 0, 
		0xE9, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psubsw", 0, 
		0xEB, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"por", 0, 
		0xEC, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"paddsb", 0, 
		0xED, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"paddsw", 0, 
		0xEF, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"pxor", 0, 
		0xF1, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psllw", 0, 
		0xF2, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"pslld", 0, 
		0xF3, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psllq", 0, 
		0xF5, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"pmaddwd", 0, 
		0xF8, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psubb", 0, 
		0xF9, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psubw", 0, 
		0xFA, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"psubd", 0, 
		0xFC, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"paddb", 0, 
		0xFD, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"paddw", 0, 
		0xFE, CODE_R, 0xF, -1, {{OP_MMXREG}, {OP_MMXRM64}}, 2, (const char *)"paddd", 0, 
	0x10, CODE_R, -1, -1, {{OP_RM8}, {OP_R8}}, 2, (const char *)"adc", 0, 
	0x11, CODE_R, -1, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"adc", 0, 
	0x12, CODE_R, -1, -1, {{OP_R8}, {OP_RM8}}, 2, (const char *)"adc", 0, 
	0x13, CODE_R, -1, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"adc", 0, 
	0x14, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"adc al, ", 0, 
	0x15, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"adc eax, ", 0, 
	0x16, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"push ss", 0, 
	0x17, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"pop ss", 0, 
	0x18, CODE_R, -1, -1, {{OP_RM8}, {OP_R8}}, 2, (const char *)"sbb", 0, 
	0x19, CODE_R, -1, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"sbb", 0, 
	0x1A, CODE_R, -1, -1, {{OP_R8}, {OP_RM8}}, 2, (const char *)"sbb", 0, 
	0x1B, CODE_R, -1, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"sbb", 0, 
	0x1C, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"sbb al, ", 0, 
	0x1D, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"sbb eax, ", 0, 
	0x1E, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"push ds", 0, 
	0x1F, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"pop ds", 0, 
	0x20, CODE_R, -1, -1, {{OP_RM8}, {OP_R8}}, 2, (const char *)"and", 0, 
	0x21, CODE_R, -1, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"and", 0, 
	0x22, CODE_R, -1, -1, {{OP_R8}, {OP_RM8}}, 2, (const char *)"and", 0, 
	0x23, CODE_R, -1, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"and", 0, 
	0x24, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"and al, ", 0, 
	0x25, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"and eax, ", 0, 
	0x26, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"es:", 0, 
	0x27, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"daa", 0, 
	0x28, CODE_R, -1, -1, {{OP_RM8}, {OP_R8}}, 2, (const char *)"sub", 0, 
	0x29, CODE_R, -1, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"sub", 0, 
	0x2A, CODE_R, -1, -1, {{OP_R8}, {OP_RM8}}, 2, (const char *)"sub", 0, 
	0x2B, CODE_R, -1, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"sub", 0, 
	0x2C, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"sub al, ", 0, 
	0x2D, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"sub eax, ", 0, 
	0x2E, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"cs:", 0, 
	0x2F, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"das", 0, 
	0x30, CODE_R, -1, -1, {{OP_RM8}, {OP_R8}}, 2, (const char *)"xor", 0, 
	0x31, CODE_R, -1, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"xor", 0, 
	0x32, CODE_R, -1, -1, {{OP_R8}, {OP_RM8}}, 2, (const char *)"xor", 0, 
	0x33, CODE_R, -1, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"xor", 0, 
	0x34, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"xor al, ", 0, 
	0x35, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"xor eax, ", 0, 
	0x36, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"ss:", 0, 
	0x37, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"aaa", 0, 
	0x38, CODE_R, -1, -1, {{OP_RM8}, {OP_R8}}, 2, (const char *)"cmp", 0, 
	0x39, CODE_R, -1, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"cmp", 0, 
	0x3A, CODE_R, -1, -1, {{OP_R8}, {OP_RM8}}, 2, (const char *)"cmp", 0, 
	0x3B, CODE_R, -1, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"cmp", 0, 
	0x3C, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"cmp al, ", 0, 
	0x3D, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"cmp eax, ", 0, 
	0x3E, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"ds:", 0, 
	0x3F, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"aas", 0, 
	//0x40, CODE_PRD, -1, -1, {{OP_R32}}, 1, (const char *)"inc", 0, 
		0x40, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"inc eax", 0, 
		0x41, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"inc ecx", 0, 
		0x42, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"inc edx", 0, 
		0x43, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"inc ebx", 0, 
		0x44, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"inc esp", 0, 
		0x45, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"inc ebp", 0, 
		0x46, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"inc esi", 0, 
		0x47, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"inc edi", 0, 
	//0x48, CODE_PRD, -1, -1, {{OP_R32}}, 1, (const char *)"dec", 0, 
		0x48, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"dec eax", 0, 
		0x49, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"dec ecx", 0, 
		0x4A, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"dec edx", 0, 
		0x4B, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"dec ebx", 0, 
		0x4C, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"dec esp", 0, 
		0x4D, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"dec ebp", 0, 
		0x4E, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"dec esi", 0, 
		0x4F, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"dec edi", 0, 
	//0x50, CODE_PRD, -1, -1, {{OP_R32}}, 1, (const char *)"push", 0, 
		0x50, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"push eax", 0, 
		0x51, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"push ecx", 0, 
		0x52, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"push edx", 0, 
		0x53, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"push ebx", 0, 
		0x54, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"push esp", 0, 
		0x55, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"push ebp", 0, 
		0x56, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"push esi", 0, 
		0x57, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"push edi", 0, 
	//0x58, CODE_PRD, -1, -1, {{OP_R32}}, 1, (const char *)"pop", 0, 
		0x58, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"pop eax", 0, 
		0x59, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"pop ecx", 0, 
		0x5A, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"pop edx", 0, 
		0x5B, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"pop ebx", 0, 
		0x5C, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"pop esp", 0, 
		0x5D, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"pop ebp", 0, 
		0x5E, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"pop esi", 0, 
		0x5F, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"pop edi", 0, 
	0x60, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"pushad", 0, 
	0x61, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"popad", 0, 
	0x62, CODE_R, -1, -1, {{OP_R32}, {OP_MPAIR_3232}}, 2, (const char *)"bound", 0, 
	0x63, CODE_R, -1, -1, {{OP_RM16}, {OP_R16}}, 2, (const char *)"arpl", 0, 
	0x64, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"fs:", 0, 
	0x65, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"gs:", 0, 
	0x66, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"opsize:", 0, 
	0x67, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"address:", 0, 
	0x68, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"push", 0, 
	0x69, CODE_R, -1, -1, {{OP_R32}, {OP_IMM32}}, 2, (const char *)"imul", 0, 
	0x69, CODE_R, -1, -1, {{OP_R32}, {OP_RM32}, {OP_IMM32}}, 3, (const char *)"imul", 0, 
	0x6A, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"push", 0, 
	0x6B, CODE_R, -1, -1, {{OP_R32}, {OP_IMM8}}, 2, (const char *)"imul", 0, 
	0x6B, CODE_R, -1, -1, {{OP_R32}, {OP_RM32}, {OP_IMM8}}, 3, (const char *)"imul", 0, 
	0x6C, NULL, -1, -1, {{OP_M8}}, 1, (const char *)"ins", 0, 
	0x6D, NULL, -1, -1, {{OP_M32}}, 1, (const char *)"ins", 0, 
	0x6E, NULL, -1, -1, {{OP_M8}}, 1, (const char *)"outs dx, ", 0, 
	0x6F, NULL, -1, -1, {{OP_M32}}, 1, (const char *)"outs dx, ", 0, 
	0x70, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jo", 0, 
	0x71, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jno", 0, 
	0x72, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jc", 0, 
	0x73, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jae", 0, 
	0x74, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"je", 0, 
	0x75, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jne", 0,
	0x76, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jbe", 0, 
	0x77, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"ja", 0, 
	0x78, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"js", 0, 
	0x79, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jns", 0, 
	0x7A, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jpe", 0, 
	0x7B, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jpo", 0, 
	0x7C, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jl", 0, 
	0x7D, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jge", 0, 
	0x7E, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jle", 0, 
	0x7F, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jg", 0, 
	0x80, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"add", 0, 
	0x80, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"or", 1, 
	0x80, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"adc", 2, 
	0x80, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"sbb", 3, 
	0x80, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"and", 4, 
	0x80, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"sub", 5, 
	0x80, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"xor", 6, 
	0x80, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"cmp", 7, 
	0x81, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM32}}, 2, (const char *)"add", 0, 
	0x81, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM32}}, 2, (const char *)"or", 1, 
	0x81, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM32}}, 2, (const char *)"adc", 2, 
	0x81, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM32}}, 2, (const char *)"sbb", 3, 
	0x81, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM32}}, 2, (const char *)"and", 4, 
	0x81, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM32}}, 2, (const char *)"sub", 5, 
	0x81, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM32}}, 2, (const char *)"xor", 6, 
	0x81, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM32}}, 2, (const char *)"cmp", 7,
	0x83, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"add", 0, 
	0x83, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"or", 1, 
	0x83, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"adc", 2, 
	0x83, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"sbb", 3, 
	0x83, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"and", 4, 
	0x83, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"sub", 5, 
	0x83, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"xor", 6, 
	0x83, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"cmp", 7, 
	0x84, CODE_R, -1, -1, {{OP_RM8}, {OP_R8}}, 2, (const char *)"test", 0, 
	0x85, CODE_R, -1, -1, {{OP_RM16}, {OP_R16}}, 2, (const char *)"test", 0, 
	0x85, CODE_R, -1, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"test", 0, 
	0x86, CODE_R, -1, -1, {{OP_RM8}, {OP_R8}}, 2, (const char *)"xchg", 0, 
	0x86, CODE_R, -1, -1, {{OP_R8}, {OP_RM8}}, 2, (const char *)"xchg", 0, 
	0x87, CODE_R, -1, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"xchg", 0, 
	0x87, CODE_R, -1, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"xchg", 0, 
	0x88, CODE_R, -1, -1, {{OP_RM8}, {OP_R8}}, 2, (const char *)"mov", 0, 
	0x89, CODE_R, -1, -1, {{OP_RM32}, {OP_R32}}, 2, (const char *)"mov", 0, 
	0x8A, CODE_R, -1, -1, {{OP_R8}, {OP_RM8}}, 2, (const char *)"mov", 0, 
	0x8B, CODE_R, -1, -1, {{OP_R32}, {OP_RM32}}, 2, (const char *)"mov", 0, 
	0x8C, CODE_R, -1, -1, {{OP_RM16}, {OP_SREG}}, 2, (const char *)"mov", 0, 
	0x8D, CODE_R, -1, -1, {{OP_R32}, {OP_M}}, 2, (const char *)"lea", 0, 
	0x8E, CODE_R, -1, -1, {{OP_SREG}, {OP_RM16}}, 2, (const char *)"mov", 0, 
	0x8F, CODE_DIGIT, -1, -1, {{OP_M32}}, 1, (const char *)"pop", 0, 
	0x90, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"nop", 0, 
	//0x90, CODE_PRD, -1, -1, {{OP_R32}}, 1, (const char *)"xchg eax, ", 0, 
		0x90, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg eax, eax", 0, 
		0x91, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg eax, ecx", 0, 
		0x92, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg eax, edx", 0, 
		0x93, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg eax, ebx", 0, 
		0x94, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg eax, esp", 0, 
		0x95, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg eax, ebp", 0, 
		0x96, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg eax, esi", 0, 
		0x97, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg eax, edi", 0, 
	//0x90, CODE_PRD, -1, -1, {{OP_R32}}, 1, (const char *)"xchg ,eax", 0, 
		0x90, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg eax, eax", 0, 
		0x91, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg ecx, eax", 0, 
		0x92, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg edx, eax", 0, 
		0x93, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg ebx, eax", 0, 
		0x94, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg esp, eax", 0, 
		0x95, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg ebp, eax", 0, 
		0x96, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg esi, eax", 0, 
		0x97, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"xchg edi, eax", 0, 
	0x98, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"cbw", 0, 
	0x99, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"cdq", 0, 
	0x99, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"cwd", 0, 
	0x9A, NULL, -1, -1, {{OP_PTR_FAR_1632}}, 1, (const char *)"call", 0, 
	0x9B, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"fwait", 0, 
	0x9B, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"wait", 0, 
		0xD9, CODE_DIGIT, 0x9B, -1, {{OP_M1428BYTE}}, 1, (const char *)"fstenv", 6, 
		0xD9, CODE_DIGIT, 0x9B, -1, {{OP_M2BYTE}}, 1, (const char *)"fstcw", 7, 
		0xDB, CODE_PREFIX_2, 0x9B, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
			0xE2, NULL, 0x9B, 0xDB, {{OP_NULL}}, 0, (const char *)"fclex", 0, 
			0xE3, NULL, 0x9B, 0xDB, {{OP_NULL}}, 0, (const char *)"fclex", 0, 
		0xDD, CODE_DIGIT, 0x9B, -1, {{OP_M94108BYTE}}, 1, (const char *)"fsave", 6, 
		0xDD, CODE_DIGIT, 0x9B, -1, {{OP_M2BYTE}}, 1, (const char *)"fstsw", 7, 
		0xDF, CODE_PREFIX_2, 0x9B, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
			0xE0, NULL, 0x9B, 0xDF, {{OP_NULL}}, 0, (const char *)"fstsw ax", 0, 
	0x9C, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"pushfd", 0, 
	0x9D, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"popfd", 0, 
	0x9E, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"sahf", 0, 
	0x9F, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"lahf", 0, 
	0xA0, NULL, -1, -1, {{OP_MOFFS8}}, 1, (const char *)"mov al, ", 0, 
	0xA1, NULL, -1, -1, {{OP_MOFFS16}}, 1, (const char *)"mov ax, ", 0, 
	0xA1, NULL, -1, -1, {{OP_MOFFS32}}, 1, (const char *)"mov eax, ", 0, 
	0xA2, NULL, -1, -1, {{OP_MOFFS8}}, 1, (const char *)"mov ,al", 0, 
	0xA3, NULL, -1, -1, {{OP_MOFFS16}}, 1, (const char *)"mov ,ax", 0, 
	0xA3, NULL, -1, -1, {{OP_MOFFS32}}, 1, (const char *)"mov ,eax", 0, 
	0xA4, NULL, -1, -1, {{OP_M8}, {OP_M8}}, 2, (const char *)"movs", 0, 
	0xA5, NULL, -1, -1, {{OP_M32}, {OP_M32}}, 2, (const char *)"movs", 0, 
	0xA6, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"cmpsb", 0, 
	0xA7, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"cmpsd", 0, 
	0xA8, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"test al, ", 0, 
	0xA9, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"test eax, ", 0, 
	0xAA, NULL, -1, -1, {{OP_M8}}, 1, (const char *)"stos", 0, 
	0xAB, NULL, -1, -1, {{OP_M32}}, 1, (const char *)"stos", 0, 
	0xAC, NULL, -1, -1, {{OP_M8}}, 1, (const char *)"lods", 0, 
	0xAD, NULL, -1, -1, {{OP_M32}}, 1, (const char *)"lods", 0, 
	0xAE, NULL, -1, -1, {{OP_M8}}, 1, (const char *)"scas", 0, 
	0xAF, NULL, -1, -1, {{OP_M32}}, 1, (const char *)"scas", 0, 
		0xB0, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"mov al, ", 0, 
		0xB1, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"mov cl, ", 0, 
		0xB2, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"mov dl, ", 0, 
		0xB3, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"mov bl, ", 0, 
		0xB4, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"mov ah, ", 0, 
		0xB5, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"mov ch, ", 0, 
		0xB6, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"mov dh, ", 0, 
		0xB7, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"mov bh, ", 0, 
		0xB8, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"mov eax, ", 0, 
		0xB9, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"mov ecx, ", 0, 
		0xBA, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"mov edx, ", 0, 
		0xBB, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"mov ebx, ", 0, 
		0xBC, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"mov esp, ", 0, 
		0xBD, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"mov ebp, ", 0, 
		0xBE, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"mov esi, ", 0, 
		0xBF, NULL, -1, -1, {{OP_IMM32}}, 1, (const char *)"mov edi, ", 0, 
	0xC0, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"rol", 0, 
	0xC0, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"ror", 1, 
	0xC0, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"rcl", 2, 
	0xC0, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"rcr", 3, 
	0xC0, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"sal", 4, 
	0xC0, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"shl", 5, 
	0xC0, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"shr", 6, 
	0xC0, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"sar", 7, 
	0xC1, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"rol", 0, 
	0xC1, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"ror", 1, 
	0xC1, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"rcl", 2, 
	0xC1, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"rcr", 3, 
	0xC1, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"sal", 4, 
	0xC1, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"shl", 5, 
	0xC1, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"shr", 6, 
	0xC1, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM8}}, 2, (const char *)"sar", 7, 
	0xC2, NULL, -1, -1, {{OP_IMM16}}, 1, (const char *)"ret", 0, 
	0xC3, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"ret", 0, 
	0xC4, CODE_R, -1, -1, {{OP_R32}, {OP_MFAR_1632}}, 2, (const char *)"les", 0, 
	0xC5, CODE_R, -1, -1, {{OP_R32}, {OP_MFAR_1632}}, 2, (const char *)"lds", 1, 
	0xC6, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"mov", 0, 
	0xC7, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM32}}, 2, (const char *)"mov", 0, 
	0xC8, NULL, -1, -1, {{OP_IMM16}, {OP_IMM8}}, 2, (const char *)"enter", 0, 
	0xC9, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"leave", 0, 
	0xCA, NULL, -1, -1, {{OP_IMM16}}, 1, (const char *)"ret", 0, 
	0xCB, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"ret", 0, 
	0xCC, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"int 3", 0, 
	0xCD, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"int", 0, 
	0xCE, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"into", 0, 
	0xCF, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"iretd", 0, 
	0xD0, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"rol ,1", 0, 
	0xD0, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"ror ,1", 1, 
	0xD0, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"rcl ,1", 2, 
	0xD0, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"rcr ,1", 3, 
	0xD0, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"sal ,1", 4, 
	0xD0, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"shl ,1", 4, 
	0xD0, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"shr ,1", 5, 
	0xD0, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"sar ,1", 7, 
	0xD1, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"rol ,1", 0, 
	0xD1, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"ror ,1", 1, 
	0xD1, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"rcl ,1", 2, 
	0xD1, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"rcr ,1", 3, 
	0xD1, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"sal ,1", 4, 
	0xD1, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"shl ,1", 4, 
	0xD1, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"shr ,1", 5, 
	0xD1, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"sar ,1", 7, 
	0xD2, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"rol ,cl", 0, 
	0xD2, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"ror ,cl", 1, 
	0xD2, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"rcl ,cl", 2, 
	0xD2, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"rcr ,cl", 3, 
	0xD2, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"sal ,cl", 4, 
	0xD2, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"shl ,cl", 4, 
	0xD2, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"shr ,cl", 5, 
	0xD2, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"sar ,cl", 7, 
	0xD3, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"rol ,cl", 0, 
	0xD3, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"ror ,cl", 1, 
	0xD3, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"rcl ,cl", 2, 
	0xD3, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"rcr ,cl", 3, 
	0xD3, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"sal ,cl", 4, 
	0xD3, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"shl ,cl", 4, 
	0xD3, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"shr ,cl", 5, 
	0xD3, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"sar ,cl", 7, 
	0xD4, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
		0x0A, NULL, 0xD4, -1, {{OP_NULL}}, 0, (const char *)"aam", 0, 
		0x0A, NULL, 0xD5, -1, {{OP_NULL}}, 0, (const char *)"aad", 0, 
	0xD6, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"setalc", 0, 
	0xD7, NULL, -1, -1, {{OP_M8}}, 1, (const char *)"xlat", 0, 
	0xD8, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const char *)"fadd", 0, 
	0xD8, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const char *)"fmul", 1, 
	0xD8, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const char *)"fcom", 2, 
	0xD8, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const char *)"fcomp", 3, 
	0xD8, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const char *)"fsub", 4, 
	0xD8, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const char *)"fsubr", 5, 
	0xD8, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const char *)"fdiv", 6, 
	0xD8, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const char *)"fdivr", 7, 
	0xD8, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
		0xC0, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fadd st(0), st(0)", 0, 
		0xC1, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fadd st(0), st(1)", 1, 
		0xC2, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fadd st(0), st(2)", 2, 
		0xC3, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fadd st(0), st(3)", 3, 
		0xC4, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fadd st(0), st(4)", 4, 
		0xC5, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fadd st(0), st(5)", 5, 
		0xC6, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fadd st(0), st(6)", 6, 
		0xC7, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fadd st(0), st(7)", 7, 
		0xC8, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fmul st(0), st(0)", 0, 
		0xC9, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fmul st(0), st(1)", 1, 
		0xCA, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fmul st(0), st(2)", 2, 
		0xCB, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fmul st(0), st(3)", 3, 
		0xCC, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fmul st(0), st(4)", 4, 
		0xCD, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fmul st(0), st(5)", 5, 
		0xCE, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fmul st(0), st(6)", 6, 
		0xCF, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fmul st(0), st(7)", 7, 
		0xD0, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcom st(0), st(0)", 0, 
		0xD1, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcom st(0), st(1)", 1, 
		0xD2, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcom st(0), st(2)", 2, 
		0xD3, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcom st(0), st(3)", 3, 
		0xD4, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcom st(0), st(4)", 4, 
		0xD5, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcom st(0), st(5)", 5, 
		0xD6, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcom st(0), st(6)", 6, 
		0xD7, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcom st(0), st(7)", 7, 
		0xD8, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcomp st(0), st(0)", 0, 
		0xD9, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcomp st(0), st(1)", 1, 
		0xDA, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcomp st(0), st(2)", 2, 
		0xDB, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcomp st(0), st(3)", 3, 
		0xDC, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcomp st(0), st(4)", 4, 
		0xDD, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcomp st(0), st(5)", 5, 
		0xDE, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcomp st(0), st(6)", 6, 
		0xDF, CODE_DIGIT, 0xD8, -1, {{OP_NULL}}, 0, (const char *)"fcomp st(0), st(7)", 7, 
	0xD9, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const  char *)"fld", 0, 
	0xD9, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const  char *)"fst", 2, 
	0xD9, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const  char *)"fstp", 3, 
	0xD9, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const  char *)"fldenv", 4, 
	0xD9, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const  char *)"fldcw", 5, 
	0xD9, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const  char *)"fsnstenv", 6, 
	0xD9, CODE_DIGIT, -1, -1, {{OP_M32REAL}}, 1, (const  char *)"fnstcw", 7, 
	0xD9, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
		0xC0, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fld st(0)", 0, 
		0xC1, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fld st(1)", 1, 
		0xC2, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fld st(2)", 2, 
		0xC3, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fld st(3)", 3, 
		0xC4, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fld st(4)", 4, 
		0xC5, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fld st(5)", 5, 
		0xC6, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fld st(6)", 6, 
		0xC7, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fld st(7)", 7, 
		0xC8, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fxch st(0)", 0, 
		0xC9, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fxch st(1)", 1, 
		0xCA, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fxch st(2)", 2, 
		0xCB, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fxch st(3)", 3, 
		0xCC, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fxch st(4)", 4, 
		0xCD, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fxch st(5)", 5, 
		0xCE, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fxch st(6)", 6, 
		0xCF, CODE_DIGIT, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fxch st(7)", 7, 
		0xD0, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fnop", 0, 
		0xE0, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fchs", 0, 
		0xE1, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fabs", 0, 
		0xE4, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"ftst", 0, 
		0xE5, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fxam", 0, 
		0xE8, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fld1", 0, 
		0xE9, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fldl2t", 0, 
		0xEA, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fldl2e", 0, 
		0xEB, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fldpi", 0, 
		0xEC, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fldlg2", 0, 
		0xED, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fldln2", 0, 
		0xEE, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fldz", 0, 
		0xF0, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"f2xm1", 0, 
		0xF1, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fyl2x", 0, 
		0xF2, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fptan", 0, 
		0xF3, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fpatan", 0, 
		0xF4, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fxtract", 0, 
		0xF5, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fprem1", 0, 
		0xF6, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fdecstp", 0, 
		0xF7, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fincstp", 0, 
		0xF8, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fprem", 0, 
		0xF9, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fyl2xp1", 0, 
		0xFA, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fsqrt", 0, 
		0xFB, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fsincos", 0, 
		0xFC, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"frndint", 0, 
		0xFD, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fscale", 0, 
		0xFE, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fsin", 0, 
		0xFF, NULL, 0xD9, -1, {{OP_NULL}}, 0, (const char *)"fcos", 0, 
	0xDA, CODE_DIGIT, -1, -1, {{OP_M32INT}}, 1, (const char *)"fiadd", 0, 
	0xDA, CODE_DIGIT, -1, -1, {{OP_M32INT}}, 1, (const char *)"fimul", 1, 
	0xDA, CODE_DIGIT, -1, -1, {{OP_M32INT}}, 1, (const char *)"ficom", 2, 
	0xDA, CODE_DIGIT, -1, -1, {{OP_M32INT}}, 1, (const char *)"ficomp", 3, 
	0xDA, CODE_DIGIT, -1, -1, {{OP_M32INT}}, 1, (const char *)"fisub", 4, 
	0xDA, CODE_DIGIT, -1, -1, {{OP_M32INT}}, 1, (const char *)"fisubr", 5, 
	0xDA, CODE_DIGIT, -1, -1, {{OP_M32INT}}, 1, (const char *)"fidiv", 6, 
	0xDA, CODE_DIGIT, -1, -1, {{OP_M32INT}}, 1, (const char *)"fidivr", 7, 
	0xDA, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
		0xC0, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovb st(0), st(0)", 0, 
		0xC1, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovb st(0), st(1)", 0, 
		0xC2, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovb st(0), st(2)", 0, 
		0xC3, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovb st(0), st(3)", 0, 
		0xC4, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovb st(0), st(4)", 0, 
		0xC5, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovb st(0), st(5)", 0, 
		0xC6, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovb st(0), st(6)", 0, 
		0xC7, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovb st(0), st(7)", 0, 
		0xC8, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmove st(0), st(0)", 0, 
		0xC9, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmove st(0), st(1)", 0, 
		0xCA, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmove st(0), st(2)", 0, 
		0xCB, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmove st(0), st(3)", 0, 
		0xCC, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmove st(0), st(4)", 0, 
		0xCD, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmove st(0), st(5)", 0, 
		0xCE, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmove st(0), st(6)", 0, 
		0xCF, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmove st(0), st(7)", 0, 
		0xD0, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovbe st(0), st(0)", 0, 
		0xD1, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovbe st(0), st(1)", 0, 
		0xD2, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovbe st(0), st(2)", 0, 
		0xD3, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovbe st(0), st(3)", 0, 
		0xD4, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovbe st(0), st(4)", 0, 
		0xD5, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovbe st(0), st(5)", 0, 
		0xD6, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovbe st(0), st(6)", 0, 
		0xD7, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovbe st(0), st(7)", 0, 
		0xD8, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovu st(0), st(0)", 0, 
		0xD9, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovu st(0), st(1)", 0, 
		0xDA, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovu st(0), st(2)", 0, 
		0xDB, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovu st(0), st(3)", 0, 
		0xDC, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovu st(0), st(4)", 0, 
		0xDD, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovu st(0), st(5)", 0, 
		0xDE, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovu st(0), st(6)", 0, 
		0xDF, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fcmovu st(0), st(7)", 0, 
		0xE9, NULL, 0xDA, -1, {{OP_NULL}}, 0, (const char *)"fucompp", 0, 
	0xDB, CODE_DIGIT, -1, -1, {{OP_M32INT}}, 1, (const char *)"fild", 0, 
	0xDB, CODE_DIGIT, -1, -1, {{OP_M32INT}}, 1, (const char *)"fist", 2, 
	0xDB, CODE_DIGIT, -1, -1, {{OP_M32INT}}, 1, (const char *)"fistp", 3, 
	0xDB, CODE_DIGIT, -1, -1, {{OP_M80REAL}}, 1, (const char *)"fld", 5, 
	0xDB, CODE_DIGIT, -1, -1, {{OP_M80REAL}}, 1, (const char *)"fild", 7, 
	0xDB, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
		0xC0, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnb st(0), st(0)", 0, 
		0xC1, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnb st(0), st(1)", 0, 
		0xC2, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnb st(0), st(2)", 0, 
		0xC3, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnb st(0), st(3)", 0, 
		0xC4, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnb st(0), st(4)", 0, 
		0xC5, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnb st(0), st(5)", 0, 
		0xC6, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnb st(0), st(6)", 0, 
		0xC7, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnb st(0), st(7)", 0, 
		0xC8, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovne st(0), st(0)", 0, 
		0xC9, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovne st(0), st(1)", 0, 
		0xCA, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovne st(0), st(2)", 0, 
		0xCB, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovne st(0), st(3)", 0, 
		0xCC, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovne st(0), st(4)", 0, 
		0xCD, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovne st(0), st(5)", 0, 
		0xCE, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovne st(0), st(6)", 0, 
		0xCF, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovne st(0), st(7)", 0, 
		0xD0, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnbe st(0), st(0)", 0, 
		0xD1, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnbe st(0), st(1)", 0, 
		0xD2, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnbe st(0), st(2)", 0, 
		0xD3, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnbe st(0), st(3)", 0, 
		0xD4, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnbe st(0), st(4)", 0, 
		0xD5, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnbe st(0), st(5)", 0, 
		0xD6, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnbe st(0), st(6)", 0, 
		0xD7, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnbe st(0), st(7)", 0, 
		0xD8, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnu st(0), st(0)", 0, 
		0xD9, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnu st(0), st(1)", 0, 
		0xDB, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnu st(0), st(2)", 0, 
		0xDB, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnu st(0), st(3)", 0, 
		0xDC, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnu st(0), st(4)", 0, 
		0xDD, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnu st(0), st(5)", 0, 
		0xDE, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnu st(0), st(6)", 0, 
		0xDF, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fcmovnu st(0), st(7)", 0, 
		0xE2, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fnclex", 0, 
		0xE3, NULL, 0xDB, -1, {{OP_NULL}}, 0, (const char *)"fninit", 0, 
		0xE8, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fucomi st(0), st(0)", 0, 
		0xE9, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fucomi st(0), st(1)", 0, 
		0xEA, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fucomi st(0), st(2)", 0, 
		0xEB, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fucomi st(0), st(3)", 0, 
		0xEC, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fucomi st(0), st(4)", 0, 
		0xED, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fucomi st(0), st(5)", 0, 
		0xEE, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fucomi st(0), st(6)", 0, 
		0xEF, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fucomi st(0), st(7)", 0, 
		0xF0, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fcomi st(0), st(0)", 0, 
		0xF1, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fcomi st(0), st(1)", 0, 
		0xF2, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fcomi st(0), st(2)", 0, 
		0xF3, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fcomi st(0), st(3)", 0, 
		0xF4, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fcomi st(0), st(4)", 0, 
		0xF5, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fcomi st(0), st(5)", 0, 
		0xF6, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fcomi st(0), st(6)", 0, 
		0xF7, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fcomi st(0), st(7)", 0, 
		0xF8, NULL, 0xFB, -1, {{OP_NULL}}, 0, (const char *)"fcomi st(0), st(8)", 0, 
	0xDC, CODE_DIGIT, -1, -1, {{OP_M64REAL}}, 1, (const char *)"fadd", 0, 
	0xDC, CODE_DIGIT, -1, -1, {{OP_M64REAL}}, 1, (const char *)"fmul", 1, 
	0xDC, CODE_DIGIT, -1, -1, {{OP_M64REAL}}, 1, (const char *)"fcom", 2, 
	0xDC, CODE_DIGIT, -1, -1, {{OP_M64REAL}}, 1, (const char *)"fcomp", 3, 
	0xDC, CODE_DIGIT, -1, -1, {{OP_M64REAL}}, 1, (const char *)"fsub", 4, 
	0xDC, CODE_DIGIT, -1, -1, {{OP_M64REAL}}, 1, (const char *)"fsubr", 5, 
	0xDC, CODE_DIGIT, -1, -1, {{OP_M64REAL}}, 1, (const char *)"fdiv", 6, 
	0xDC, CODE_DIGIT, -1, -1, {{OP_M64REAL}}, 1, (const char *)"fdivr", 7, 
	0xDC, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
		0xC0, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fadd st(0), st(0)", 0, 
		0xC1, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fadd st(1), st(0)", 0, 
		0xC2, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fadd st(2), st(0)", 0, 
		0xC3, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fadd st(3), st(0)", 0, 
		0xC4, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fadd st(4), st(0)", 0, 
		0xC5, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fadd st(5), st(0)", 0, 
		0xC6, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fadd st(6), st(0)", 0, 
		0xC7, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fadd st(7), st(0)", 0, 
		0xC8, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fmul st(0), st(0)", 0, 
		0xC9, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fmul st(1), st(0)", 0, 
		0xCA, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fmul st(2), st(0)", 0, 
		0xCB, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fmul st(3), st(0)", 0, 
		0xCC, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fmul st(4), st(0)", 0, 
		0xCD, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fmul st(5), st(0)", 0, 
		0xCE, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fmul st(6), st(0)", 0, 
		0xCF, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fmul st(7), st(0)", 0, 
		0xE0, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsubr st(0), st(0)", 0, 
		0xE1, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsubr st(1), st(0)", 0, 
		0xE2, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsubr st(2), st(0)", 0, 
		0xE3, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsubr st(3), st(0)", 0, 
		0xE4, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsubr st(4), st(0)", 0, 
		0xE5, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsubr st(5), st(0)", 0, 
		0xE6, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsubr st(6), st(0)", 0, 
		0xE7, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsubr st(7), st(0)", 0, 
		0xE8, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsub st(0), st(0)", 0, 
		0xE9, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsub st(1), st(0)", 0, 
		0xEA, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsub st(2), st(0)", 0, 
		0xEB, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsub st(3), st(0)", 0, 
		0xEC, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsub st(4), st(0)", 0, 
		0xED, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsub st(5), st(0)", 0, 
		0xEE, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsub st(6), st(0)", 0, 
		0xEF, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fsub st(7), st(0)", 0,
		0xF0, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdivr st(0), st(0)", 0, 
		0xF1, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdivr st(1), st(0)", 0, 
		0xF2, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdivr st(2), st(0)", 0, 
		0xF3, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdivr st(3), st(0)", 0, 
		0xF4, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdivr st(4), st(0)", 0, 
		0xF5, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdivr st(5), st(0)", 0, 
		0xF6, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdivr st(6), st(0)", 0, 
		0xF7, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdivr st(7), st(0)", 0, 
		0xF8, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdiv st(0), st(0)", 0, 
		0xF9, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdiv st(1), st(0)", 0, 
		0xFA, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdiv st(2), st(0)", 0, 
		0xFB, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdiv st(3), st(0)", 0, 
		0xFC, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdiv st(4), st(0)", 0, 
		0xFD, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdiv st(5), st(0)", 0, 
		0xFE, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdiv st(6), st(0)", 0, 
		0xFF, NULL, 0xDC, -1, {{OP_NULL}}, 0, (const char *)"fdiv st(7), st(0)", 0, 
	0xDD, CODE_DIGIT, -1, -1, {{OP_M64REAL}}, 1, (const char *)"fld", 0, 
	0xDD, CODE_DIGIT, -1, -1, {{OP_M64REAL}}, 1, (const char *)"fst", 2, 
	0xDD, CODE_DIGIT, -1, -1, {{OP_M64REAL}}, 1, (const char *)"fstp", 3, 
	0xDD, CODE_DIGIT, -1, -1, {{OP_M94108BYTE}}, 1, (const char *)"frstor", 4, 
	0xDD, CODE_DIGIT, -1, -1, {{OP_M94108BYTE}}, 1, (const char *)"fnsave", 6, 
	0xDD, CODE_DIGIT, -1, -1, {{OP_M2BYTE}}, 1, (const char *)"fnstsw", 7, 
	0xDD, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
		0xc0, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"ffree st(0)", 0, 
		0xc1, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"ffree st(1)", 0, 
		0xc2, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"ffree st(2)", 0, 
		0xc3, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"ffree st(3)", 0, 
		0xc4, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"ffree st(4)", 0, 
		0xc5, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"ffree st(5)", 0, 
		0xc6, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"ffree st(6)", 0, 
		0xc7, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"ffree st(7)", 0, 
		0xd0, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fst st(0)", 0, 
		0xd1, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fst st(1)", 0, 
		0xd2, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fst st(2)", 0, 
		0xd3, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fst st(3)", 0, 
		0xd4, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fst st(4)", 0, 
		0xd5, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fst st(5)", 0, 
		0xd6, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fst st(6)", 0, 
		0xd7, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fst st(7)", 0, 
		0xd8, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fstp st(0)", 0, 
		0xd9, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fstp st(1)", 0, 
		0xda, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fstp st(2)", 0, 
		0xdb, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fstp st(3)", 0, 
		0xdc, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fstp st(4)", 0, 
		0xdd, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fstp st(5)", 0, 
		0xde, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fstp st(6)", 0, 
		0xdf, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fstp st(7)", 0,
		0xe0, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucom st(0)", 0, 
		0xe1, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucom st(1)", 0, 
		0xe2, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucom st(2)", 0, 
		0xe3, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucom st(3)", 0, 
		0xe4, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucom st(4)", 0, 
		0xe5, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucom st(5)", 0, 
		0xe6, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucom st(6)", 0, 
		0xe7, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucom st(7)", 0, 
		0xe8, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucomp st(0)", 0, 
		0xe9, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucomp st(1)", 0, 
		0xea, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucomp st(2)", 0, 
		0xeb, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucomp st(3)", 0, 
		0xec, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucomp st(4)", 0, 
		0xed, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucomp st(5)", 0, 
		0xee, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucomp st(6)", 0, 
		0xef, NULL, 0xdd, -1, {{OP_NULL}}, 0, (const char *)"fucomp st(7)", 0, 
	0xDE, CODE_DIGIT, -1, -1, {{OP_M16INT}}, 1, (const char *)"fiadd", 0, 
	0xDE, CODE_DIGIT, -1, -1, {{OP_M16INT}}, 1, (const char *)"fimul", 1, 
	0xDE, CODE_DIGIT, -1, -1, {{OP_M16INT}}, 1, (const char *)"ficom", 2, 
	0xDE, CODE_DIGIT, -1, -1, {{OP_M16INT}}, 1, (const char *)"ficomp", 3, 
	0xDE, CODE_DIGIT, -1, -1, {{OP_M16INT}}, 1, (const char *)"fisub", 4, 
	0xDE, CODE_DIGIT, -1, -1, {{OP_M16INT}}, 1, (const char *)"fisubr", 5, 
	0xDE, CODE_DIGIT, -1, -1, {{OP_M16INT}}, 1, (const char *)"fidiv", 6, 
	0xDE, CODE_DIGIT, -1, -1, {{OP_M16INT}}, 1, (const char *)"fidivr", 7, 
	0xDE, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
		0xC0, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"faddp st(0), st(0)", 0, 
		0xC1, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"faddp st(1), st(0)", 0, 
		0xC2, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"faddp st(2), st(0)", 0, 
		0xC3, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"faddp st(3), st(0)", 0, 
		0xC4, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"faddp st(4), st(0)", 0, 
		0xC5, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"faddp st(5), st(0)", 0, 
		0xC6, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"faddp st(6), st(0)", 0, 
		0xC7, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"faddp st(7), st(0)", 0, 
		0xC8, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fmulp st(0), st(0)", 0, 
		0xC9, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fmulp st(1), st(0)", 0, 
		0xCA, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fmulp st(2), st(0)", 0, 
		0xCB, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fmulp st(3), st(0)", 0, 
		0xCC, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fmulp st(4), st(0)", 0, 
		0xCD, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fmulp st(5), st(0)", 0, 
		0xCE, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fmulp st(6), st(0)", 0, 
		0xCF, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fmulp st(7), st(0)", 0, 
		0xD9, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fcompp", 0, 
		0xE0, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsubrp st(0), st(0)", 0, 
		0xE1, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsubrp st(1), st(0)", 0, 
		0xE2, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsubrp st(2), st(0)", 0, 
		0xE3, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsubrp st(3), st(0)", 0, 
		0xE4, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsubrp st(4), st(0)", 0, 
		0xE5, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsubrp st(5), st(0)", 0, 
		0xE6, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsubrp st(6), st(0)", 0, 
		0xE7, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsubrp st(7), st(0)", 0, 
		0xE8, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsub st(0), st(0)", 0, 
		0xE9, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsub st(1), st(0)", 0, 
		0xEA, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsub st(2), st(0)", 0, 
		0xEB, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsub st(3), st(0)", 0, 
		0xEC, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsub st(4), st(0)", 0, 
		0xED, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsub st(5), st(0)", 0, 
		0xEE, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsub st(6), st(0)", 0, 
		0xEF, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fsub st(7), st(0)", 0,
		0xF0, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivprp st(0), st(0)", 0, 
		0xF1, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivprp st(1), st(0)", 0, 
		0xF2, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivprp st(2), st(0)", 0, 
		0xF3, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivprp st(3), st(0)", 0, 
		0xF4, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivprp st(4), st(0)", 0, 
		0xF5, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivprp st(5), st(0)", 0, 
		0xF6, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivprp st(6), st(0)", 0, 
		0xF7, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivprp st(7), st(0)", 0, 
		0xF8, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivp st(0), st(0)", 0, 
		0xF9, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivp st(1), st(0)", 0, 
		0xFA, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivp st(2), st(0)", 0, 
		0xFB, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivp st(3), st(0)", 0, 
		0xFC, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivp st(4), st(0)", 0, 
		0xFD, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivp st(5), st(0)", 0, 
		0xFE, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivp st(6), st(0)", 0, 
		0xFF, NULL, 0xDE, -1, {{OP_NULL}}, 0, (const char *)"fdivp st(7), st(0)", 0, 
	0xDF, CODE_DIGIT, -1, -1, {{OP_M16INT}}, 1, (const char *)"fild", 0, 
	0xDF, CODE_DIGIT, -1, -1, {{OP_M16INT}}, 1, (const char *)"fist", 2, 
	0xDF, CODE_DIGIT, -1, -1, {{OP_M16INT}}, 1, (const char *)"fistp", 3, 
	0xDF, CODE_DIGIT, -1, -1, {{OP_M80BCD}}, 1, (const char *)"fbld", 4, 
	0xDF, CODE_DIGIT, -1, -1, {{OP_M64INT}}, 1, (const char *)"fild", 5, 
	0xDF, CODE_DIGIT, -1, -1, {{OP_M80BCD}}, 1, (const char *)"fbstp", 6, 
	0xDF, CODE_DIGIT, -1, -1, {{OP_M64INT}}, 1, (const char *)"fistp", 7, 
	0xDF, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
		0xE0, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fnstsw ax", 0, 
		0xE8, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fucomip st(0), st(0)", 0, 
		0xE9, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fucomip st(0), st(1)", 0, 
		0xEA, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fucomip st(0), st(2)", 0, 
		0xEB, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fucomip st(0), st(3)", 0, 
		0xEC, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fucomip st(0), st(4)", 0, 
		0xED, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fucomip st(0), st(5)", 0, 
		0xEE, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fucomip st(0), st(6)", 0, 
		0xEF, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fucomip st(0), st(7)", 0,
		0xF0, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fcomip st(0), st(0)", 0, 
		0xF1, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fcomip st(0), st(1)", 0, 
		0xF2, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fcomip st(0), st(2)", 0, 
		0xF3, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fcomip st(0), st(3)", 0, 
		0xF4, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fcomip st(0), st(4)", 0, 
		0xF5, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fcomip st(0), st(5)", 0, 
		0xF6, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fcomip st(0), st(6)", 0, 
		0xF7, NULL, 0xDF, -1, {{OP_NULL}}, 0, (const char *)"fcomip st(0), st(7)", 0, 
	0xE0, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"loopne", 0, 
	0xE0, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"loopnz", 0, 
	0xE1, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"loope", 0, 
	0xE1, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"loopz", 0, 
	0xE2, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"loop", 0, 
	0xE3, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jecxz", 0, 
	0xE4, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"in al, ", 0, 
	0xE5, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"in eax, ", 0, 
	0xE6, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"out ,al", 0, 
	0xE7, NULL, -1, -1, {{OP_IMM8}}, 1, (const char *)"out ,eax", 0, 
	0xE8, NULL, -1, -1, {{OP_REL32}}, 1, (const char *)"call", 0, 
	0xE9, NULL, -1, -1, {{OP_REL32}}, 1, (const char *)"jmp", 0, 
	0xEA, NULL, -1, -1, {{OP_PTR_FAR_1632}}, 1, (const char *)"jmp", 0, 
	0xEB, NULL, -1, -1, {{OP_REL8}}, 1, (const char *)"jmp", 0, 
	0xEC, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"in al, dx", 0, 
	0xED, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"in eax, dx", 0, 
	0xEE, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"out dx, al", 0, 
	0xEF, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"out dx, eax", 0, 
	0xF0, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"lock", 0, 
	0xF1, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"int1", 0, 
	0xF2, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
		0xA6, NULL, 0xF2, -1, {{OP_M8}, {OP_M8}}, 2, (const char *)"repne cmps", 0, 
		0xA7, NULL, 0xF2, -1, {{OP_M32}, {OP_M32}}, 2, (const char *)"repne cmps", 0, 
		0xAE, NULL, 0xF2, -1, {{OP_M8}}, 1, (const char *)"repne scas", 0, 
		0xAF, NULL, 0xF2, -1, {{OP_M32}}, 1, (const char *)"repne scas", 0, 
	0xF3, CODE_PREFIX, -1, -1, {{OP_NULL}}, 0, (const char *)"", 0, 
		0x6C, NULL, 0xF3, -1, {{OP_M8}}, 1, (const char *)"rep ins ,dx", 0, 
		0x6D, NULL, 0xF3, -1, {{OP_M32}}, 1, (const char *)"rep ins ,dx", 0, 
		0x6E, NULL, 0xF3, -1, {{OP_M8}}, 1, (const char *)"rep outs dx, ", 0, 
		0x6F, NULL, 0xF3, -1, {{OP_M32}}, 1, (const char *)"rep outs dx, ", 0, 
		0xA4, NULL, 0xF3, -1, {{OP_M8}, {OP_M8}}, 2, (const char *)"rep movs", 0, 
		0xA5, NULL, 0xF3, -1, {{OP_M32}, {OP_M32}}, 2, (const char *)"rep movs", 0, 
		0xA6, NULL, 0xF3, -1, {{OP_M8}, {OP_M8}}, 2, (const char *)"repe cmps", 0, 
		0xA7, NULL, 0xF3, -1, {{OP_M32}, {OP_M32}}, 2, (const char *)"repe cmps", 0, 
		0xAA, NULL, 0xF3, -1, {{OP_M8}}, 1, (const char *)"rep stos", 0, 
		0xAB, NULL, 0xF3, -1, {{OP_M32}}, 1, (const char *)"rep stos", 0, 
		0xAC, NULL, 0xF3, -1, {{OP_NULL}}, 0, (const char *)"rep lods al", 0, 
		0xAD, NULL,  0xF3, -1, {{OP_NULL}}, 0, (const char *)"rep lods eax", 0, 
		0xAE, NULL, 0xF3, -1, {{OP_M8}}, 1, (const char *)"repe scas", 0, 
		0xAF, NULL, 0xF3, -1, {{OP_M32}}, 1, (const char *)"repe scas", 0, 
	0xF4, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"hlt", 0, 
	0xF5, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"cmc", 0, 
	0xF6, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"not", 2, 
	0xF6, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"neg", 3, 
	0xF6, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"mul", 4, 
	0xF6, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"imul", 5, 
	0xF6, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"div", 6, 
	0xF6, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"idiv", 7, 
	0xF6, CODE_DIGIT, -1, -1, {{OP_RM8}, {OP_IMM8}}, 2, (const char *)"test", 0, 
	0xF7, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"not", 2, 
	0xF7, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"neg", 3, 
	0xF7, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"mul", 4, 
	0xF7, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"imul", 5, 
	0xF7, CODE_DIGIT, -1, -1, {{OP_RM16}}, 1, (const char *)"div", 6, 
	0xF7, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"div", 6, 
	0xF7, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"idiv", 7, 
	0xF7, CODE_DIGIT, -1, -1, {{OP_RM32}, {OP_IMM32}}, 2, (const char *)"test", 0, 
	0xF8, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"clc", 0, 
	0xF9, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"stc", 0, 
	0xFA, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"cli", 0, 
	0xFB, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"cti", 0, 
	0xFC, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"cld", 0, 
	0xFD, NULL, -1, -1, {{OP_NULL}}, 0, (const char *)"std", 0, 
	0xFE, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"inc", 0, 
	0xFE, CODE_DIGIT, -1, -1, {{OP_RM8}}, 1, (const char *)"dec", 1, 
	0xFF, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"inc", 0, 
	0xFF, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"dec", 1, 
	0xFF, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"call", 2, 
	0xFF, CODE_DIGIT, -1, -1, {{OP_PTR_FAR_1632}}, 1, (const char *)"call", 3, 
	0xFF, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"jmp", 4, 
	0xFF, CODE_DIGIT, -1, -1, {{OP_RM32}}, 1, (const char *)"push", 6, 
	0xFF, CODE_R, -1, -1, {{OP_PTR_FAR_1632}}, 1, (const char *)"jmp", 0, 
};

disasm::disasm(){

}

disasm::~disasm(){

}

int disasm::ModRMReqCheck(int iCode){
	int count = 0;
	const INSTRC *pCodeInfo = &m_instrc[iCode];
	if (pCodeInfo->op_size <= 0) return 0;
	if (pCodeInfo->code_type == CODE_R) return 1;
	if (pCodeInfo->code_type == CODE_DIGIT) return 1;

	for (int i=0; i<pCodeInfo->op_size; i++){
		switch (pCodeInfo->op[i].op_type){
			case OP_IMM8:
				count++;
				break;
			case OP_IMM16:
				count++;
				break;
			case OP_IMM32:
				count++;
				break;
			case OP_REL8:
				count++;
				break;
			case OP_REL16:
				count++;
				break;
			case OP_REL32:
				count++;
				break;
		}
	}

	if (count >= pCodeInfo->op_size) return 0;
	return 0;
}

int disasm::SIBReqCheck(const MODRM &ModRm){
	if (ModRm.Mod > 2) return 0;
	return (strstr(m_modrm32[ModRm.Mod][ModRm.RM], "[-][-]") != NULL);
}

int disasm::DispReqCheck(const MODRM &ModRm){
	if (ModRm.Mod > 2) return 0;
	const char *disp = strstr(m_modrm32[ModRm.Mod][ModRm.RM], "disp");
	
	if (!disp) return 0;
	return (atoi(disp+4) / 8);
}

int disasm::ImmReqCheck(int iCode){
	const INSTRC *pCodeInfo = &m_instrc[iCode];
	if (pCodeInfo->op_size <= 0) return 0;

	for (int i=0; i<pCodeInfo->op_size; i++){
		switch (pCodeInfo->op[i].op_type){
			case OP_IMM8:
				return 1;
			case OP_IMM16:
				return 2;
			case OP_IMM32:
				return 4;
			case OP_REL8:
				return 1;
			case OP_REL16:
				return 2;
			case OP_REL32:
				return 4;
		}
	}
	return 0;
}

void disasm::GetModRM(BYTE modRm, MODRM *pModRm){
	pModRm->Mod = (modRm & 0xC0) >> 6;		//11000000b;
	pModRm->RegOpCode = (modRm & 0x38) >> 3; //00111000b;
	pModRm->RM = modRm & 0x7;			// 00000111b;
}

int disasm::GetLineSize(BYTE *code){
	SIZE_T pos = 0;
	SIZE_T code_size = 1;
	int iPrefix = IsPrefix(code[pos]);
	int iCode = -1;

	if (iPrefix >= 0){
		iCode = FindSubOpPrefix(code[pos], code[pos+1], &code[pos]);
		if (iCode >= 0){
			code_size = 2;
		}else{
			iCode = FindSubOpPrefix(code[pos], code[pos+1], code[pos+2], &code[pos]);
			if (iCode >= 0)
				code_size = 3;
		}
	}

	if (iPrefix < 0 && iCode < 0){
		iCode = FindOp(code[pos], &code[pos]);
	}else if (iCode < 0){
		pos++;
		iCode = FindOp(code[pos], &code[pos]);
	}
	if (iCode < 0) return -1;
	pos += code_size;

	if (ModRMReqCheck(iCode)){
		MODRM modrm;

		GetModRM(code[pos], &modrm);
		pos++;
		pos += SIBReqCheck(modrm);
		pos += DispReqCheck(modrm);
	}
	pos += ImmReqCheck(iCode);

	return pos;
}

int disasm::IsPrefix(BYTE op){
	int nOp = COUNT_TABLE(m_instrc);

	for (int i=0; i<nOp; i++){
		if (m_instrc[i].code == op){
			if (m_instrc[i].code_type == CODE_PREFIX)
				return i;
		}
	}
	return -1;
}

int disasm::FindOp(BYTE op, BYTE *pos){
	int nOp = COUNT_TABLE(m_instrc);
	
	for (int i=0; i<nOp; i++){
		if (m_instrc[i].code == op && m_instrc[i].prefix_1 <= 0){
			return FindExOp(i, pos);
		}
	}
	return -1;
}

int disasm::FindSubOpPrefix(BYTE prefix, BYTE op, BYTE *pos){
	int nOp = COUNT_TABLE(m_instrc);
	int iPrefix = IsPrefix(prefix);

	if (iPrefix < 0) return -1;

	for (int i=0; i<nOp; i++){
		if (m_instrc[i].prefix_1 == prefix){
			if (m_instrc[i].code == op){
				return FindExOp(i, pos);
			}
		}
	}

	return -1;
}

int disasm::FindSubOpPrefix(BYTE prefix, BYTE op1, BYTE op2, BYTE *pos){
	int nOp = COUNT_TABLE(m_instrc);
	int iPrefix = IsPrefix(prefix);
	
	if (iPrefix < 0) return -1;

	for (int i=0; i<nOp; i++){
		if (m_instrc[i].prefix_1 == prefix){
			if (m_instrc[i].prefix_2 == op1){
				if (m_instrc[i].code == op2){
					return FindExOp(i, pos);
				}
			}
		}
	}
	return -1;
}

int disasm::GetCodeSize(int iCode){
	const INSTRC *pCodeInfo = &m_instrc[iCode];

	if (pCodeInfo->prefix_1 < 0) return 1;
	else if (pCodeInfo->prefix_1 < 0) return 2;

	return 3;
}

int disasm::FindExOp(int iCode, BYTE *opCode){
	int nOp = COUNT_TABLE(m_instrc);
	const INSTRC *pCodeInfo = &m_instrc[iCode];
	
	if (pCodeInfo->code_type != CODE_DIGIT) return iCode;

	MODRM modrm;
	GetModRM(opCode[GetCodeSize(iCode)], &modrm);

	for (int i=0; i<nOp; i++){
		if (m_instrc[i].code == pCodeInfo->code && 
			m_instrc[i].digit_id == modrm.RegOpCode && 
			memcmp(&m_instrc[i].prefix_1, &pCodeInfo->prefix_1, sizeof(int)*2) == 0
			)
			return i;
	}
	return iCode;
}